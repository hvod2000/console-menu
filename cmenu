#!/bin/bash

declare -i LINES
LINES=$(tput lines 2>/dev/null || echo 20)
delimiter=$'\n'
safe_mode=false
input_format='> %sâ–ˆ'
item_format='  %s'
for arg in "$@"; do case $arg in
	(-s)	safe_mode=true;;
	(-l*)	LINES=${arg:2};;
	(-d*)	delimiter="${arg:2}";;
	(-p*)	prompt=$(sed $'s/$/\e[K/' <<< ${arg:2})
		prompt_len=$(wc -l <<< $prompt);;
	(-re*)	input_format="${arg:3}";;
	(-ni*)	item_format="${arg:3}";;
	(*)	printf -- "%s: invalid option -- '%s'\n" "$0" "$arg"
		exit 1
esac done
LINES=LINES-prompt_len
readarray -d "$delimeter" -t opts; opts_len=${#opts[@]}
exec 3<&1 </dev/tty >/dev/tty
$safe_mode || printf "\e[?25l\e[?7l\e[2J"
render() {
	printf -- "\e[%sH$input_format\e[K\n"  $((prompt_len+1)) "$pattern"
	sugs=$( (grep -Fm$((LINES-1)) -- "$pattern" |
		sed $'s/$/\e[K/g; s/^/  /g') <<< $opts)
	printf -- "%s\e[J" "$sugs"
}
printf -- "\e[H%s\n" "$prompt"
render
while read -rsN1 char; do
	case $char in
		($'\e') printf "\ec" && exit 1;;
		($'\b'|$'\177') pattern=${pattern%?};;
		($'\t') pattern=$(grep -Fm1 "$pattern" <<< $opts);;
		($'\n') break;;
		(*) pattern+=$char;;
	esac
	render
done

$safe_mode || printf "\ec"
printf -- "%s" "$pattern" >&3
