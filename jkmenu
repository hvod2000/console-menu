#!/bin/bash

declare -i cur offset LINES
LINES=$(tput lines 2>/dev/null || echo 20)
delimiter=$'\n'
safe_mode=false
return_key=false
return_index=false
item_format='  %s'
selected_item_format='> %s'
for arg in "$@"; do case $arg in
	(-k)	return_key=true;;
	(-s)	safe_mode=true;;
	(-i)	return_index=true;;
	(-l*)	LINES=${arg:2};;
	(-c*)	cur=${arg:2};;
	(-d*)	delimiter="${arg:2}";;
	(-ni*)	item_format="${arg:3}";;
	(-si*)	selected_item_format="${arg:3}";;
	(-p*)	prompt=$(sed $'s/$/\e[K/' <<< ${arg:2})
		prompt_len=$(wc -l <<< $prompt);;
	(*)	printf -- "%s: invalid option -- '%s'\n" "$0" "$arg"
		exit 1
esac done
LINES=LINES-prompt_len
readarray -d "$delimiter" -t opts; opts_len=${#opts[@]}
exec 3<&1 </dev/tty >/dev/tty
$safe_mode || printf "\e[?25l\e[?7l\e[2J"
render() {
	((cur>=LINES+offset)) && offset=cur-LINES+1
	((cur<offset)) && offset=cur
	printf -- "\e[%sH%s\e[J\e[%sH$selected_item_format" \
		$((prompt_len+1)) \
		"$(printf -- "$item_format\e[K\n" "${opts[@]:offset:LINES}")" \
		$((cur-offset+prompt_len+1)) \
		"${opts[cur]}"
}
printf -- "\e[H%s\n" "$prompt"
render
while read -rsN1 char; do case $char in
	(j)	cur=(cur+1)%opts_len;;
	(k)	cur=(cur+opts_len-1)%opts_len;;
	(l)	break;;
	(*)	$return_key && break;;
esac; render; done
$safe_mode || printf "\ec"
$return_key && printf -- %s\\0 "$char" >&3
$return_index && printf -- %s "$cur" >&3 ||
	printf -- %s "${opts[cur]}" >&3
