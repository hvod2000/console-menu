#!/bin/bash

readarray -t opts</dev/stdin; len=${#opts[@]}
exec 3<&1 </dev/tty >/dev/tty; printf "\e[?25l\e[?7l"

declare -i cur offset
render() {
	LINES=$(tput lines)
	((cur>=LINES+offset)) && offset=cur-LINES+1
	((cur<offset)) && offset=cur
	printf "\e[H"
	printf %s "$(printf "  %s\e[K\n" "${opts[@]:offset:LINES}")"
	printf "\e[J\e[$((cur-offset+1))H> "
}

return() {
	printf "\ec"
	exec >&3
	printf "%s\n" "$1"
	exit
}

render
while read -rsN1 char; do
	case $char in
		(j)	cur=(cur+1)%len;;
		(k)	cur=(cur+len-1)%len;;
		(/)	ans=$(printf "%s\n" "${opts[@]}" | cmenu) && return "$ans"
			printf "\e[?25l\e[?7l";;
		(q)	printf "\ec" && exit 1;;
		(h)	printf "\ec" && exit 2;;
		(l)	break
	esac
	render
done
return "${opts[cur]}"
